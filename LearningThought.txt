2017.05.10 Wed
1. each method will return a page and you can make lots of changes there
2. Learnt the trick for link, we can import and jump to different pages by importing different python modules.
3. Learnt the url(regex, view, kwargs, name) method.
	(1) these regular expressions do not search GET and POST parameters, or the domain name
	(2) keyword arguments and Name of the url.
4. python manage.py runserver

2017.05.11 Thur
1. A model class is a Table in DB, and each filed under model class will be the columnName.
2. You¡¯ll use this value in your Python code, and your database will use it as the column name; we can aslo overwrite it with other name
3. We can define relationship for different tables(models).

4. python manage.py migrate is to initialize the DB.
5. Each app is connected to the DB by settings.py.
6. python manage.py makemigrations polls is to make a specific app udpated in Django.
	The sqlmigrate command doesn¡¯t actually run the migration on your database - it just prints it to the screen so that you can see what SQL Django thinks is 

7. It¡¯s important to add __str__() methods to your models, also a good way to design OOD.

8. Django Model class lookup is just like qztable in Quartz!!
	Question.objects.get(pub_date__year=current_year)
	Question.qztable[table.pub_date__year == current_year]

9. 2 related Models have API to access each other.

10. The SYNTAX: # Use double underscores to separate relationships.


11. Django provides an auth.py and page to interact with our model.

Steps to add tables:
	Change your models (in models.py).
	Run python manage.py makemigrations to create migrations for those changes
	Run python manage.py migrate to apply those changes to the database.

reason for convience:
	Django handles the schema creation of DB-- 
	It provides usefull Shell
	Django solves the problem of creating a unified interface for site administrators to edit content.
	Each APP can be pluggalbe, like the poll model can be plug into admin page!

2017.05.12 Fri
1. A view is just like a webpage
2. Each part you see on a webpage can be implemented by a view class
In Django, web pages and other content are delivered by views. Each view is represented by a simple Python function

3. URLconfs will hold the elegant urls.

4. it's using regex to take parameters?! No wonder its name is urlpatterns!
parentheses around a pattern ¡°captures¡± the text matched by that pattern and sends it as an argument to the view function

5. Views can read the template system?! that's so cool
6. import data/table from .models
7.So let¡¯s use Django¡¯s template system to separate the design from Python by creating a template that the view can use.


2017.05.13 Sat
1. Instead of the HttpResponse, we have a shortcut:
The render() function takes the request object as its first argument, a template name as its second argument and a dictionary as its optional third argument. It returns an HttpResponse object of the given template rendered with the given context.
2. Different views are connected by the urlPattern
3. we also have a shortcut for error 404: get_object_or_404
4. Why do we use a helper function get_object_or_404() instead of automatically catching the ObjectDoesNotExist exceptions at a higher level, or having the model API raise Http404 instead of ObjectDoesNotExist?
5. Removing hardcoded URLs in templates

6. add namespaces to your URLconf to differentiate between apps.


2017.05.14 Sun

1. I need to know the basic concept of HTML
2. Whenever you create a form that alters data server-side, use method="post". This tip isn¡¯t specific to Django; it¡¯s just good Web development practice.
3. forloop.counter indicates how many times the for tag has gone through its loop
4. all POST forms that are targeted at internal URLs should use the {% csrf_token %} template tag.
5. you should always return an HttpResponseRedirect after successfully dealing with POST data. This tip isn¡¯t specific to Django; it¡¯s just good Web development practice.
6. This is called a race condition. If you are interested, you can read Avoiding race conditions using F() to learn how you can solve this issue.
7. getting data from the database according to a parameter passed in the URL, loading a template and returning the rendered template. Because this is so common, Django provides a shortcut, called the ¡°generic views¡± system.

8. Abstract and convert view methods into View class?!
	abstract the concepts of ¡°display a list of objects¡± and ¡°display a detail page for a particular type of object.¡±